function [theAnalysis]=guiCluster(theAnalysis,id)
%guiCluster GUI for creating or updating clusters
%
% theAnalysis=guiCluster(theAnalysis) displays a graphical user
%   interface (GUI) for adding a new cluster with a default ID to
%   the analysis. The new cluster ID is automatically generated
%   by incrementing the higher existing ID in the analysis.
%
% theAnalysis=guiCluster(theAnalysis,clusterID) displays a
%   graphical user interface(GUI) for adding a new cluster
%   or updating an existing cluster
%   to the analysis. If the a cluster with the indicated
%   ID has been defined in the analysis then the cluster
%   with such ID, is opened for update. If the ID does not
%   identify an existing cluster then a new cluster is created
%   with that ID. A valid ID must be a scalar positive integer.
%
%
%
%
% Copyright 2008
% @author Felipe Orihuela-Espina
%
% See also guiAnalysis, analysis, cluster
%

%% Log
%
%
% File created: 22-Jul-2008
% File last modified (before creation of this log): N/A. This method had
%   not been updated since creation.
%
% 7/8-Jun-2023: FOE
%   + Added this log. Got rid of old label @date.
%   + Started to update the get/set methods calls to struct like syntax
%




%% Initialize the figure
%...and hide the GUI as it is being constructed
width=600;
height=420;
f=figure('Visible','off','Position',[100,300,width,height]);
set(f,'NumberTitle','off');
set(f,'MenuBar','none'); %Hide MATLAB figure menu
movegui(f,'center');

%% Add components
%Menus

%Toolbars

%Elements
fontSize=16;
bgColor=get(f,'Color');
uicontrol(f,'Style', 'text',...
       'String', 'ID:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.9 0.2 0.06]);
uicontrol(f,'Style', 'edit',...
       'Tag','idEditBox',...
       'BackgroundColor','w',...
       'FontSize',fontSize,...
       'HorizontalAlignment','left',...
       'Callback',{@OnUpdateElement_Callback},...
       'Units','normalize',...
       'Position', [0.22 0.9 0.1 0.06]);
uicontrol(f,'Style', 'text',...
       'String', 'Tag:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.32 0.9 0.2 0.06]);
uicontrol(f,'Style', 'edit',...
       'Tag','tagEditBox',...
       'BackgroundColor','w',...
       'FontSize',fontSize,...
       'HorizontalAlignment','left',...
       'Callback',{@OnUpdateElement_Callback},...
       'Units','normalize',...
       'Position', [0.52 0.9 0.4 0.06]);
uicontrol(f,'Style', 'text',...
       'String', 'Description:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.82 0.2 0.06]);
uicontrol(f,'Style', 'edit',...
       'Tag','descriptionEditBox',...
       'BackgroundColor','w',...
       'FontSize',fontSize,...
       'HorizontalAlignment','left',...
       'Callback',{@OnUpdateElement_Callback},...
       'Units','normalize',...
       'Position', [0.22 0.82 0.4 0.06]);
uicontrol(f,'Style', 'text',...
       'String', 'Visible:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.64 0.82 0.2 0.06]);
uicontrol(f,'Style', 'checkbox',...
       'Tag','visibleCheckbox',...
       'Min', 0,...
       'Max', 1,...
       'Value', 1,...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-4,...
       'Units','normalize',...
       'Position', [0.85 0.82 0.04 0.06],...
       'Callback',{@visibleCheckbox_Callback});

   
tabPanel=uitabgroup(f,...
       'Position', [0.05 0.12 0.9 0.63]);

generationTab = uitab(tabPanel,...
       'Title','Generation');
uicontrol(generationTab,'Style', 'text',...
       'String', 'Subjects IDs:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.84 0.35 0.15]);
uicontrol(generationTab,'Style', 'edit',...
       'Tag','subjectsEditBox',...
       'BackgroundColor','w',...
       'FontSize',fontSize,...
       'HorizontalAlignment','left',...
       'Callback',{@OnUpdateElement_Callback},...
       'Units','normalize',...
       'Position', [0.37 0.84 0.4 0.15]);
uicontrol(generationTab,'Style', 'text',...
       'String', 'Sessions IDs:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.68 0.35 0.15]);
uicontrol(generationTab,'Style', 'edit',...
       'Tag','sessionsEditBox',...
       'BackgroundColor','w',...
       'FontSize',fontSize,...
       'HorizontalAlignment','left',...
       'Callback',{@OnUpdateElement_Callback},...
       'Units','normalize',...
       'Position', [0.37 0.68 0.4 0.15]);
uicontrol(generationTab,'Style', 'text',...
       'String', 'Stimulus Tags:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.52 0.35 0.15]);
uicontrol(generationTab,'Style', 'edit',...
       'Tag','stimulusEditBox',...
       'BackgroundColor','w',...
       'FontSize',fontSize,...
       'HorizontalAlignment','left',...
       'Callback',{@OnUpdateElement_Callback},...
       'Units','normalize',...
       'Position', [0.37 0.52 0.4 0.15]);
uicontrol(generationTab,'Style', 'text',...
       'String', 'Blocks Num.:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.36 0.35 0.15]);
uicontrol(generationTab,'Style', 'edit',...
       'Tag','blocksEditBox',...
       'BackgroundColor','w',...
       'FontSize',fontSize,...
       'HorizontalAlignment','left',...
       'Callback',{@OnUpdateElement_Callback},...
       'Units','normalize',...
       'Position', [0.37 0.36 0.4 0.15]);
uicontrol(generationTab,'Style', 'text',...
       'String', 'Channel Group:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.20 0.35 0.15]);
uicontrol(generationTab,'Style', 'edit',...
       'Tag','channelGroupEditBox',...
       'BackgroundColor','w',...
       'FontSize',fontSize,...
       'HorizontalAlignment','left',...
       'Callback',{@OnUpdateElement_Callback},...
       'Units','normalize',...
       'Position', [0.37 0.20 0.4 0.15]);
uicontrol(generationTab,'Style', 'pushbutton',...
       'String', 'Assign Points',...
       'Tag','assignPointsButton',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize,...
       'HorizontalAlignment','center',...
       'Units','normalize',...
       'Position', [0.05 0.02 0.9 0.15],...
       'Callback',{@OnAssignPoints_Callback});

visualizationTab = uitab(tabPanel,...
       'Title','Visualization');
dataPointsPanel = uipanel(visualizationTab,'Title','Data Points',...
        'BorderType','etchedin',...
		'FontSize',fontSize-4,...
        'BackgroundColor',get(f,'Color'),...
        'Position',[0.025 0.45 0.3 0.52]);
uicontrol(dataPointsPanel,'Style', 'text',...
       'String', 'Color:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.68 0.5 0.25]);
uicontrol(dataPointsPanel,'Style', 'pushbutton',...
       'Tag','dColorButton',...
       'String','',...
       'BackgroundColor','k',...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','left',...
       'Callback',{@OnSelectDataColor_Callback},...
       'Units','normalize',...
       'Position', [0.52 0.68 0.4 0.25]);
uicontrol(dataPointsPanel,'Style', 'text',...
       'String', 'Marker:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.38 0.5 0.25]);
uicontrol(dataPointsPanel,'Style', 'popupmenu',...
       'Tag','dMarkerCombo',...
       'String', {'+','o','*','.','x','s','d','^','v','<','>','p','h','none'},...
       'BackgroundColor','w',...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','left',...
       'Callback',{@OnSelectDataMarker_Callback},...
       'Units','normalize',...
       'Position', [0.52 0.38 0.4 0.25]);
uicontrol(dataPointsPanel,'Style', 'text',...
       'String', 'Marker Size:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.05 0.5 0.28]);
uicontrol(dataPointsPanel,'Style', 'edit',...
       'Tag','dMarkerSizeEditBox',...
       'BackgroundColor','w',...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','left',...
       'Callback',{@OnUpdateElement_Callback},...
       'Units','normalize',...
       'Position', [0.52 0.05 0.4 0.28]);
uicontrol(visualizationTab,'Style', 'checkbox',...
       'Tag','displayDataPointsCheckbox',...
       'Min', 0,...
       'Max', 1,...
       'Value', 1,...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-4,...
       'Units','normalize',...
       'Position', [0.27 0.89 0.03 0.08],...
       'Callback',{@displayDataPointsCheckbox_Callback});
    
centroidPanel = uipanel(visualizationTab,'Title','Centroid',...
        'BorderType','etchedin',...
		'FontSize',fontSize-4,...
        'BackgroundColor',get(f,'Color'),...
        'Position',[0.35 0.45 0.3 0.52]);
uicontrol(centroidPanel,'Style', 'text',...
       'String', 'Color:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.68 0.5 0.25]);
uicontrol(centroidPanel,'Style', 'pushbutton',...
       'Tag','cColorButton',...
       'String','',...
       'BackgroundColor','k',...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','left',...
       'Callback',{@OnSelectCentroidColor_Callback},...
       'Units','normalize',...
       'Position', [0.52 0.68 0.4 0.25]);
uicontrol(centroidPanel,'Style', 'text',...
       'String', 'Marker:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.38 0.5 0.25]);
uicontrol(centroidPanel,'Style', 'popupmenu',...
       'Tag','cMarkerCombo',...
       'String', {'+','o','*','.','x','s','d','^','v','<','>','p','h','none'},...
       'BackgroundColor','w',...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','left',...
       'Callback',{@OnSelectCentroidMarker_Callback},...
       'Units','normalize',...
       'Position', [0.52 0.38 0.4 0.25]);
uicontrol(centroidPanel,'Style', 'text',...
       'String', 'Marker Size:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.05 0.5 0.28]);
uicontrol(centroidPanel,'Style', 'edit',...
       'Tag','cMarkerSizeEditBox',...
       'BackgroundColor','w',...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','left',...
       'Callback',{@OnUpdateElement_Callback},...
       'Units','normalize',...
       'Position', [0.52 0.05 0.4 0.28]);
uicontrol(visualizationTab,'Style', 'checkbox',...
       'Tag','displayCentroidCheckbox',...
       'Min', 0,...
       'Max', 1,...
       'Value', 1,...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-4,...
       'Units','normalize',...
       'Position', [0.6 0.89 0.03 0.08],...
       'Callback',{@displayCentroidCheckbox_Callback});

furthestPointPanel = uipanel(visualizationTab,'Title','Furthest Point',...
        'BorderType','etchedin',...
		'FontSize',fontSize-4,...
        'BackgroundColor',get(f,'Color'),...
        'Position',[0.675 0.45 0.3 0.52]);
uicontrol(furthestPointPanel,'Style', 'text',...
       'String', 'Color:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.68 0.5 0.25]);
uicontrol(furthestPointPanel,'Style', 'pushbutton',...
       'Tag','fpColorButton',...
       'String','',...
       'BackgroundColor','k',...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','left',...
       'Callback',{@OnSelectFurthestPointColor_Callback},...
       'Units','normalize',...
       'Position', [0.52 0.68 0.4 0.25]);
uicontrol(furthestPointPanel,'Style', 'text',...
       'String', 'Marker:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.38 0.5 0.25]);
uicontrol(furthestPointPanel,'Style', 'popupmenu',...
       'Tag','fpMarkerCombo',...
       'String', {'+','o','*','.','x','s','d','^','v','<','>','p','h','none'},...
       'BackgroundColor','w',...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','left',...
       'Callback',{@OnSelectFurthestPointMarker_Callback},...
       'Units','normalize',...
       'Position', [0.52 0.38 0.4 0.25]);
uicontrol(furthestPointPanel,'Style', 'text',...
       'String', 'Marker Size:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.05 0.5 0.28]);
uicontrol(furthestPointPanel,'Style', 'edit',...
       'Tag','fpMarkerSizeEditBox',...
       'BackgroundColor','w',...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','left',...
       'Callback',{@OnUpdateElement_Callback},...
       'Units','normalize',...
       'Position', [0.52 0.05 0.4 0.28]);
uicontrol(visualizationTab,'Style', 'checkbox',...
       'Tag','displayFurthestPointCheckbox',...
       'Min', 0,...
       'Max', 1,...
       'Value', 1,...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-4,...
       'Units','normalize',...
       'Position', [0.93 0.89 0.03 0.08],...
       'Callback',{@displayFurthestPointCheckbox_Callback});

linkPanel = uipanel(visualizationTab,'Title','Link',...
        'BorderType','etchedin',...
		'FontSize',fontSize-4,...
        'BackgroundColor',get(f,'Color'),...
        'Position',[0.025 0.02 0.3 0.42]);
uicontrol(linkPanel,'Style', 'text',...
       'String', 'Color:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.53 0.5 0.44]);
uicontrol(linkPanel,'Style', 'pushbutton',...
       'Tag','linkColorButton',...
       'String','',...
       'BackgroundColor','k',...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','left',...
       'Callback',{@OnSelectLinkColor_Callback},...
       'Units','normalize',...
       'Position', [0.52 0.53 0.4 0.44]);
uicontrol(linkPanel,'Style', 'text',...
       'String', 'Line Width:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.05 0.5 0.44]);
uicontrol(linkPanel,'Style', 'edit',...
       'Tag','linkLineWidthEditBox',...
       'BackgroundColor','w',...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','left',...
       'Callback',{@OnUpdateElement_Callback},...
       'Units','normalize',...
       'Position', [0.52 0.05 0.4 0.44]);
uicontrol(visualizationTab,'Style', 'checkbox',...
       'Tag','displayLinkCheckbox',...
       'Min', 0,...
       'Max', 1,...
       'Value', 1,...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-4,...
       'Units','normalize',...
       'Position', [0.28 0.34 0.03 0.08],...
       'Callback',{@displayLinkCheckbox_Callback});

AvgDCirclePanel = uipanel(visualizationTab,'Title','Avg. Distance',...
        'BorderType','etchedin',...
		'FontSize',fontSize-4,...
        'BackgroundColor',get(f,'Color'),...
        'Position',[0.35 0.02 0.3 0.42]);
uicontrol(AvgDCirclePanel,'Style', 'text',...
       'String', 'Color:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.53 0.5 0.44]);
uicontrol(AvgDCirclePanel,'Style', 'pushbutton',...
       'Tag','avgDCircleColorButton',...
       'String','',...
       'BackgroundColor','k',...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','left',...
       'Callback',{@OnSelectAvgDCircleColor_Callback},...
       'Units','normalize',...
       'Position', [0.52 0.53 0.4 0.44]);
uicontrol(AvgDCirclePanel,'Style', 'text',...
       'String', 'Line Width:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.05 0.5 0.44]);
uicontrol(AvgDCirclePanel,'Style', 'edit',...
       'Tag','avgDCircleLineWidthEditBox',...
       'BackgroundColor','w',...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','left',...
       'Callback',{@OnUpdateElement_Callback},...
       'Units','normalize',...
       'Position', [0.52 0.05 0.4 0.44]);
uicontrol(visualizationTab,'Style', 'checkbox',...
       'Tag','displayAvgDCircleCheckbox',...
       'Min', 0,...
       'Max', 1,...
       'Value', 1,...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-4,...
       'Units','normalize',...
       'Position', [0.6 0.34 0.03 0.08],...
       'Callback',{@displayAvgDCircleCheckbox_Callback});

othersPanel = uipanel(visualizationTab,'Title','Others',...
        'BorderType','etchedin',...
		'FontSize',fontSize-4,...
        'BackgroundColor',get(f,'Color'),...
        'Position',[0.675 0.02 0.3 0.42]);
uicontrol(othersPanel,'Style', 'text',...
       'String', 'Quick Color:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.01 0.53 0.5 0.44]);
uicontrol(othersPanel,'Style', 'pushbutton',...
       'Tag','quickColorButton',...
       'String','',...
       'BackgroundColor','k',...
       'FontSize',fontSize-6,...
       'HorizontalAlignment','left',...
       'Callback',{@OnSelectQuickColor_Callback},...
       'Units','normalize',...
       'Position', [0.52 0.53 0.4 0.44]);

    
patternIdxsTab = uitab(tabPanel,...
       'Title','Point Idxs.');
uicontrol(patternIdxsTab,'Style', 'text',...
       'String', 'Patterns Indexes:',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize,...
       'HorizontalAlignment','left',...
       'Units','normalize',...
       'Position', [0.05 0.86 0.9 0.12]);
uicontrol(patternIdxsTab,'Style', 'edit',...
       'Tag','patternIdxsEditBox',...
       'Max',2,...
       'Min',0,...
       'BackgroundColor','w',...
       'FontSize',fontSize,...
       'HorizontalAlignment','left',...
       'Enable','off',...
       'Callback',{@OnUpdateElement_Callback},...
       'Units','normalize',...
       'Position', [0.05 0.05 0.9 0.75]);

   

uicontrol(f,'Style', 'pushbutton',...
       'String', 'Save and Close',...
       'Tag','saveAndCloseButton',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.5 0.02 0.28 0.08],...
       'Callback',{@OnSaveAndClose_Callback});
uicontrol(f,'Style', 'pushbutton',...
       'String', 'Cancel',...
       'Tag','cancelButton',...
       'BackgroundColor',bgColor,...
       'FontSize',fontSize,...
       'HorizontalAlignment','right',...
       'Units','normalize',...
       'Position', [0.8 0.02 0.18 0.08],...
       'Callback',{@OnClose_Callback});
   

%% On Opening
handles = guihandles(f); %NOTE that only include those whose 'Tag' are not empty

if exist('id','var')
    if ismember(id,getClusterList(theAnalysis))
        %Open this cluster for update
        handles.currentElement.data=getCluster(theAnalysis,id);
        handles.currentElement.saved=true;
        handles.currentElement.insert=false;
    else
        %Create a new cluster with the given ID
        handles.currentElement.data=cluster(id);
        handles.currentElement.saved=false;
        handles.currentElement.insert=true;
    end        
else %Generate a new ID and Create a new cluster
    existingClusters=getClusterList(theAnalysis);
    if isempty(existingClusters)
        newID=1;
    else
        newID=max(existingClusters)+1;
    end
    handles.currentElement.data=cluster(newID);
    handles.currentElement.saved=false;
    handles.currentElement.insert=true;
end

guidata(f,handles);
OnLoad(f);

 
%% Make GUI visible
set(f,'Name','ICNA - guiCluster');
set(f,'Visible','on');
waitfor(f);




%% OnClear
%Clears the gui (possibly after closing the currentElement)
%See also OnLoad
function OnClear(hObject)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
handles=guidata(hObject);

set(handles.nameEditBox,'String','');
set(handles.tagEditBox,'String','');
set(handles.descriptionEditBox,'String','');
set(handles.visibleCheckbox,'Value',1);

set(handles.subjectsEditBox,'String','');
set(handles.sessionsEditBox,'String','');
set(handles.stimulusEditBox,'String','');
set(handles.blocksEditBox,'String','');
set(handles.channelGroupEditBox,'String','');

set(handles.dColorButton,'BackgroundColor','k');
set(handles.dMarkerCombo,'Value',1);
set(handles.dMarkerSizeEditBox,'String',8);
set(handles.displayDataPointsCheckbox,'Value','1');

set(handles.cColorButton,'BackgroundColor','k');
set(handles.cMarkerCombo,'Value',1);
set(handles.cMarkerSizeEditBox,'String',8);
set(handles.displayCentroidCheckbox,'Value','1');

set(handles.fpColorButton,'BackgroundColor','k');
set(handles.fpMarkerCombo,'Value',1);
set(handles.fpMarkerSizeEditBox,'String',8);
set(handles.displayFurthestPointCheckbox,'Value','1');

set(handles.linkColorButton,'BackgroundColor','k');
set(handles.linkLineWidthEditBox,'String','1.5');
set(handles.displayLinkCheckbox,'Value','1');

set(handles.avgDCircleColorButton,'BackgroundColor','k');
set(handles.avgDCircleLineWidthEditBox,'String','1.5');
set(handles.displayavgDCircleCheckbox,'Value','1');

set(handles.patternIdxsEditBox,'String','');

end



%% OnLoad
%Refresh the whole GUI when loading a new Element.
%See also OnClear
function OnLoad(hObject)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
handles=guidata(hObject);
if (~isempty(handles.currentElement.data))

    set(handles.idEditBox,'String',...
        num2str(get(handles.currentElement.data,'ID')));
    set(handles.tagEditBox,'String',...
        get(handles.currentElement.data,'Tag'));
    set(handles.descriptionEditBox,'String',...
        get(handles.currentElement.data,'Description'));
    set(handles.visibleCheckbox,'Value',...
        get(handles.currentElement.data,'Visible'));

    set(handles.subjectsEditBox,'String',...
        mat2str(get(handles.currentElement.data,'SubjectsIDs')));
    set(handles.sessionsEditBox,'String',...
        mat2str(get(handles.currentElement.data,'SessionsIDs')));
    set(handles.stimulusEditBox,'String',...
        mat2str(get(handles.currentElement.data,'StimuliIDs')));
    set(handles.blocksEditBox,'String',...
        mat2str(get(handles.currentElement.data,'BlocksIDs')));
    set(handles.channelGroupEditBox,'String',...
        mat2str(get(handles.currentElement.data,'ChannelGroupsIDs')));

    set(handles.dColorButton,'BackgroundColor',...
        get(handles.currentElement.data,'DataColor'));
    s=get(handles.dMarkerCombo,'String');
    m=marker2value(get(handles.currentElement.data,'DataMarker'),s);
        %See auxiliary functions below
    set(handles.dMarkerCombo,'Value',m);
    set(handles.dMarkerSizeEditBox,'String',...
        num2str(get(handles.currentElement.data,'DataMarkerSize')));
    set(handles.displayDataPointsCheckbox,'Value',...
        get(handles.currentElement.data,'ShowPatternPoints'));

    set(handles.cColorButton,'BackgroundColor',...
        get(handles.currentElement.data,'CentroidColor'));
    s=get(handles.cMarkerCombo,'String');
    m=marker2value(get(handles.currentElement.data,'CentroidMarker'),s);
        %See auxiliary functions below
    set(handles.cMarkerCombo,'Value',m);
    set(handles.cMarkerSizeEditBox,'String',...
        num2str(get(handles.currentElement.data,'CentroidMarkerSize')));
    set(handles.displayCentroidCheckbox,'Value',...
        get(handles.currentElement.data,'ShowCentroid'));

    set(handles.fpColorButton,'BackgroundColor',...
        get(handles.currentElement.data,'FurthestPointColor'));
    s=get(handles.fpMarkerCombo,'String');
    m=marker2value(get(handles.currentElement.data,'FurthestPointMarker'),s);
        %See auxiliary functions below
    set(handles.fpMarkerCombo,'Value',m);
    set(handles.fpMarkerSizeEditBox,'String',...
        num2str(get(handles.currentElement.data,'FurthestPointMarkerSize')));
    set(handles.displayFurthestPointCheckbox,'Value',...
        get(handles.currentElement.data,'ShowFurthestPoint'));

    set(handles.linkColorButton,'BackgroundColor',...
        get(handles.currentElement.data,'LinkColor'));
    set(handles.linkLineWidthEditBox,'String',...
        num2str(get(handles.currentElement.data,'LinkLineWidth')));
    set(handles.displayLinkCheckbox,'Value',...
        get(handles.currentElement.data,'ShowLink'));

    set(handles.avgDCircleColorButton,'BackgroundColor',...
        get(handles.currentElement.data,'AverageDistanceColor'));
    set(handles.avgDCircleLineWidthEditBox,'String',...
        num2str(get(handles.currentElement.data,'AverageDistanceLineWidth')));
    set(handles.displayAvgDCircleCheckbox,'Value',...
        get(handles.currentElement.data,'ShowAverageDistance'));

    set(handles.quickColorButton,'BackgroundColor',...
        get(handles.currentElement.data,'DataColor'));
    set(handles.patternIdxsEditBox,'String','');
end
end



%% OnClose callback
%On Close this window. Check whether data needs saving
function OnClose_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
handles=guidata(hObject);
closeWindow=true;
if (~handles.currentElement.saved)
    element=[];
    %Offer the possibility of saving
    button = questdlg(['Current data is not saved. ' ...
        'Would you like to save the latest changes before ' ...
        'closing it?'],...
        'Close window','Save','Close','Cancel','Close');
    switch (button)
        case 'Save'
            OnSaveElement_Callback(hObject,eventData);
            closeWindow=true;
        case 'Close'
            closeWindow=true;
        case 'Cancel'
            closeWindow=false;
    end
end
 
if (closeWindow)
    clear handles.currentElement.data    
    %delete(get(gcf,'Children'));
    %delete(gcf);
    close(gcf);
end
end



%% displayDataPointsCheckbox Callback
function displayDataPointsCheckbox_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
handles = guidata(f);
if get(handles.displayDataPointsCheckbox,'Value')
    handles.currentElement.data=...
        set(handles.currentElement.data,'ShowPatternPoints',true);
    set(handles.dColorButton,'Enable','on');
    set(handles.dMarkerCombo,'Enable','on');
    set(handles.dMarkerSizeEditBox,'Enable','on');
else
    handles.currentElement.data=...
        set(handles.currentElement.data,'ShowPatternPoints',false);
    set(handles.dColorButton,'Enable','off');
    set(handles.dMarkerCombo,'Enable','off');
    set(handles.dMarkerSizeEditBox,'Enable','off');
end
handles.currentElement.saved=false;
guidata(f,handles);
end


%% displayCentroidCheckbox Callback
function displayCentroidCheckbox_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
handles = guidata(f);
if get(handles.displayCentroidCheckbox,'Value')
    handles.currentElement.data=...
        set(handles.currentElement.data,'ShowCentroid',true);
    set(handles.cColorButton,'Enable','on');
    set(handles.cMarkerCombo,'Enable','on');
    set(handles.cMarkerSizeEditBox,'Enable','on');
else
    handles.currentElement.data=...
        set(handles.currentElement.data,'ShowCentroid',false);
    set(handles.cColorButton,'Enable','off');
    set(handles.cMarkerCombo,'Enable','off');
    set(handles.cMarkerSizeEditBox,'Enable','off');
end
handles.currentElement.saved=false;
guidata(f,handles);
end


%% displayFurthestPointCheckbox Callback
function displayFurthestPointCheckbox_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
handles = guidata(f);
if get(handles.displayFurthestPointCheckbox,'Value')
    handles.currentElement.data=...
        set(handles.currentElement.data,'ShowFurthestPoint',true);
    set(handles.fpColorButton,'Enable','on');
    set(handles.fpMarkerCombo,'Enable','on');
    set(handles.fpMarkerSizeEditBox,'Enable','on');
else
    handles.currentElement.data=...
        set(handles.currentElement.data,'ShowFurthestPoint',false);
    set(handles.fpColorButton,'Enable','off');
    set(handles.fpMarkerCombo,'Enable','off');
    set(handles.fpMarkerSizeEditBox,'Enable','off');
end
handles.currentElement.saved=false;
guidata(f,handles);
end


%% displayLinkCheckbox Callback
function displayLinkCheckbox_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
handles = guidata(f);
if get(handles.displayLinkCheckbox,'Value')
    handles.currentElement.data=...
        set(handles.currentElement.data,'ShowLink',true);
    set(handles.linkColorButton,'Enable','on');
    set(handles.linkLineWidthEditBox,'Enable','on');
else
    handles.currentElement.data=...
        set(handles.currentElement.data,'ShowLink',false);
    set(handles.linkColorButton,'Enable','off');
    set(handles.linkLineWidthEditBox,'Enable','off');
end
handles.currentElement.saved=false;
guidata(f,handles);
end

%% visibleCheckbox Callback
function visibleCheckbox_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
handles = guidata(f);
v=get(handles.visibleCheckbox,'Value');
handles.currentElement.data=...
    set(handles.currentElement.data,'Visible',v);
handles.currentElement.saved=false;
guidata(f,handles);
end


%% displayAvgDCircleCheckbox Callback
function displayAvgDCircleCheckbox_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
handles = guidata(f);
if get(handles.displayAvgDCircleCheckbox,'Value')
    handles.currentElement.data=...
        set(handles.currentElement.data,'ShowAverageDistance',true);
    set(handles.avgDCircleColorButton,'Enable','on');
    set(handles.avgDCircleLineWidthEditBox,'Enable','on');
else
    handles.currentElement.data=...
        set(handles.currentElement.data,'ShowAverageDistance',false);
    set(handles.avgDCircleColorButton,'Enable','off');
    set(handles.avgDCircleLineWidthEditBox,'Enable','off');
end
handles.currentElement.saved=false;
guidata(f,handles);
end


%% OnAssignPoints Callback
%Assign points button callback
function OnAssignPoints_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
handles = guidata(f);

try
    subjectsIDs=str2num(get(handles.subjectsEditBox,'String'));
    sessionsIDs=str2num(get(handles.sessionsEditBox,'String'));
    stimuliIDs=str2num(get(handles.stimulusEditBox,'String'));
    blocksIDs=str2num(get(handles.blocksEditBox,'String'));
    channelGroupsIDs=str2num(get(handles.channelGroupEditBox,'String'));
    
    c=createCluster(theAnalysis,...
            'SubjectsIDs',subjectsIDs,...
            'SessionsIDs',sessionsIDs,...
            'StimuliIDs',stimuliIDs,...
            'BlocksIDs',blocksIDs,...
            'ChannelGroups',channelGroupsIDs);

        
    handles.currentElement.data=...
        set(handles.currentElement.data,...
            'PatternIndexes',c.patternIndexes);
    handles.currentElement.data=...
        set(handles.currentElement.data,...
            'SubjectsIDs',c.subjectsIDs);
    handles.currentElement.data=...
        set(handles.currentElement.data,...
            'SessionsIDs',c.sessionsIDs);
    handles.currentElement.data=...
        set(handles.currentElement.data,...
            'StimuliIDs',c.stimuliIDs);
    handles.currentElement.data=...
        set(handles.currentElement.data,...
            'BlocksIDs',c.blocksIDs);
    handles.currentElement.data=...
        set(handles.currentElement.data,...
            'ChannelGroupsIDs',c.channelGroupsIDs);
    handles.currentElement.data=...
        set(handles.currentElement.data,...
            'Centroid',c.centroid);
    handles.currentElement.data=...
        set(handles.currentElement.data,...
            'CentroidCriteria',c.centroidCriteria);
    handles.currentElement.data=...
        set(handles.currentElement.data,...
            'AverageDistance',c.averageDistance);
    handles.currentElement.data=...
        set(handles.currentElement.data,...
            'MaximumDistance',c.maximumDistance);
    handles.currentElement.data=...
        set(handles.currentElement.data,...
            'FurthestPoint',c.furthestPoint);
    
    handles.currentElement.saved=false;
    guidata(f,handles);
    set(handles.patternIdxsEditBox,'String',...
        mat2str(get(handles.currentElement.data,'PatternIndexes')));
    guidata(f,handles);
    
catch ME
    msg={ME.identifier,'', ME.message};
    warndlg(msg,'guiCluster - Assign Points');
end    


end

%% OnSelectDataColor Callback
%Data color button callback
function OnSelectDataColor_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
handles = guidata(f);
tmp = handles.currentElement.data;
c=uisetcolor(tmp.dataColor);
tmp.dataColor = c;
handles.currentElement.data = tmp;
    %this is valid even if cancelled uisetcolor
set(handles.dColorButton,'BackgroundColor',c);
handles.currentElement.saved=false;
guidata(f,handles);
end


%% OnSelectCentroidColor Callback
%Centroid color button callback
function OnSelectCentroidColor_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
handles = guidata(f);
c=uisetcolor(get(handles.currentElement.data,'CentroidColor'));
handles.currentElement.data=...
    set(handles.currentElement.data,'CentroidColor',c);
    %this is valid even if cancelled uisetcolor
set(handles.cColorButton,'BackgroundColor',c);
handles.currentElement.saved=false;
guidata(f,handles);
end


%% OnSelectFurthestPointColor Callback
%Furthest point color button callback
function OnSelectFurthestPointColor_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
handles = guidata(f);
c=uisetcolor(get(handles.currentElement.data,'FurthestPointColor'));
handles.currentElement.data=...
    set(handles.currentElement.data,'FurthestPointColor',c);
    %this is valid even if cancelled uisetcolor
set(handles.fpColorButton,'BackgroundColor',c);
handles.currentElement.saved=false;
guidata(f,handles);
end


%% OnSelectLinkColor Callback
%Link color button callback
function OnSelectLinkColor_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
handles = guidata(f);
c=uisetcolor(get(handles.currentElement.data,'LinkColor'));
handles.currentElement.data=...
    set(handles.currentElement.data,'LinkColor',c);
    %this is valid even if cancelled uisetcolor
set(handles.linkColorButton,'BackgroundColor',c);
handles.currentElement.saved=false;
guidata(f,handles);
end


%% OnSelectAvgDCircleColor Callback
%Average distance circle color button callback
function OnSelectAvgDCircleColor_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
handles = guidata(f);
c=uisetcolor(get(handles.currentElement.data,'AverageDistanceColor'));
handles.currentElement.data=...
    set(handles.currentElement.data,'AverageDistanceColor',c);
    %this is valid even if cancelled uisetcolor
set(handles.avgDCircleColorButton,'BackgroundColor',c);
handles.currentElement.saved=false;
guidata(f,handles);
end

%% OnSelectQuikColor Callback
%Quick color selection button callback
function OnSelectQuickColor_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
handles = guidata(f);
c=uisetcolor(get(handles.currentElement.data,'DataColor'));
set(handles.quickColorButton,'BackgroundColor',c);
handles.currentElement.data=...
    set(handles.currentElement.data,'DataColor',c);
set(handles.dColorButton,'BackgroundColor',c);
handles.currentElement.data=...
    set(handles.currentElement.data,'CentroidColor',c);
set(handles.cColorButton,'BackgroundColor',c);
handles.currentElement.data=...
    set(handles.currentElement.data,'FurthestPointColor',c);
set(handles.fpColorButton,'BackgroundColor',c);
handles.currentElement.data=...
    set(handles.currentElement.data,'LinkColor',c);
set(handles.linkColorButton,'BackgroundColor',c);
handles.currentElement.data=...
    set(handles.currentElement.data,'AverageDistanceColor',c);
set(handles.avgDCircleColorButton,'BackgroundColor',c);
handles.currentElement.saved=false;
guidata(f,handles);
end


%% OnSelectDataMarker Callback
%Data marker button callback
function OnSelectDataMarker_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
handles = guidata(f);
m=get(handles.dMarkerCombo,'String');
val=get(handles.dMarkerCombo,'Value');
handles.currentElement.data=...
    set(handles.currentElement.data,'DataMarker',m{val});
handles.currentElement.saved=false;
guidata(f,handles);
end


%% OnSelectCentroidMarker Callback
%Data marker button callback
function OnSelectCentroidMarker_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
handles = guidata(f);
m=get(handles.cMarkerCombo,'String');
val=get(handles.cMarkerCombo,'Value');
handles.currentElement.data=...
    set(handles.currentElement.data,'CentroidMarker',m{val});
handles.currentElement.saved=false;
guidata(f,handles);
end


%% OnSelectFurthestPointMarker Callback
%Data marker button callback
function OnSelectFurthestPointMarker_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
handles = guidata(f);
m=get(handles.fpMarkerCombo,'String');
val=get(handles.fpMarkerCombo,'Value');
handles.currentElement.data=...
    set(handles.currentElement.data,'FurthestPointMarker',m{val});
handles.currentElement.saved=false;
guidata(f,handles);
end



%% OnSaveElement Callback
%Save the cluster changes to the experiment
function OnSaveElement_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
OnUpdateElement_Callback(hObject,eventData)
handles = guidata(f);
if ~isempty(handles.currentElement.data)
    if (handles.currentElement.insert)
        theAnalysis=addCluster(theAnalysis,handles.currentElement.data);
    else %Update
        theAnalysis=setCluster(theAnalysis,id,handles.currentElement.data);
    end
    handles.currentElement.saved=true;
    guidata(f,handles);
end
end


%% OnSaveAndClose callback
%On Save and Closing this window
function OnSaveAndClose_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
OnSaveElement_Callback(hObject,eventData);
OnClose_Callback(hObject,eventData);
end

%% OnUpdateElement callback
%Updates the current cluster with new information
function OnUpdateElement_Callback(hObject,eventData)
% hObject - Handle of the object, e.g., the GUI component,
%   for which the callback was triggered.  See GCBO
% eventdata - Reserved for later use.
handles=guidata(hObject);

try
    s=cluster(handles.currentElement.data);
    tmpId=str2double(get(handles.idEditBox,'String'));
    s=set(s,'ID',tmpId);
    s=set(s,'Tag',get(handles.tagEditBox,'String'));
    s=set(s,'Description',get(handles.descriptionEditBox,'String'));

    s=set(s,'DataMarkerSize',...
            str2double(get(handles.dMarkerSizeEditBox,'String')));
    s=set(s,'CentroidMarkerSize',...
            str2double(get(handles.cMarkerSizeEditBox,'String')));
    s=set(s,'FurthestPointMarkerSize',...
            str2double(get(handles.fpMarkerSizeEditBox,'String')));
    s=set(s,'LinkLineWidth',...
            str2double(get(handles.linkLineWidthEditBox,'String')));
    s=set(s,'AverageDistanceLineWidth',...
            str2double(get(handles.avgDCircleLineWidthEditBox,'String')));
    
    s=set(s,'SubjectsIDs',...
            str2num(get(handles.subjectsEditBox,'String')));
    s=set(s,'SessionsIDs',...
            str2num(get(handles.sessionsEditBox,'String')));
    s=set(s,'StimuliIDs',...
            str2num(get(handles.stimulusEditBox,'String')));
    s=set(s,'BlocksIDs',...
            str2num(get(handles.blocksEditBox,'String')));
    s=set(s,'ChannelGroupsIDs',...
            str2num(get(handles.channelGroupEditBox,'String')));

    handles.currentElement.data=s;
    handles.currentElement.saved=false;
catch ME
    msg={ME.identifier,'', ME.message};
    warndlg(msg,'guiCluster - Update Element');
    %Refresh those wrong values with the correct ones
    set(handles.idEditBox,'String',...
        num2str(get(handles.currentElement.data,'ID')))
    set(handles.tagEditBox,'String',...
        get(handles.currentElement.data,'Tag'))
    set(handles.descriptionEditBox,'String',...
        get(handles.currentElement.data,'Description'))

    set(handles.dMarkerSizeEditBox,'String',...
        num2str(get(handles.currentElement.data,'DataMarkerSize')));
    set(handles.cMarkerSizeEditBox,'String',...
        num2str(get(handles.currentElement.data,'CentroidMarkerSize')));
    set(handles.fpMarkerSizeEditBox,'String',...
        num2str(get(handles.currentElement.data,'FurthestPointMarkerSize')));
    set(handles.linkLineWidthEditBox,'String',...
        num2str(get(handles.currentElement.data,'LinkLineWidth')))
    set(handles.avgDCircleLineWidthEditBox,'String',...
        num2str(get(handles.currentElement.data,'AverageDistanceLineWidth')))

    set(handles.subjectsEditBox,'String',...
        mat2str(get(handles.currentElement.data,'SubjectsIDs')));
    set(handles.sessionsEditBox,'String',...
        mat2str(get(handles.currentElement.data,'SessionsIDs')));
    set(handles.stimulusEditBox,'String',...
        mat2str(get(handles.currentElement.data,'StimuliIDs')));
    set(handles.blocksEditBox,'String',...
        mat2str(get(handles.currentElement.data,'BlocksIDs')));
    set(handles.channelGroupEditBox,'String',...
        mat2str(get(handles.currentElement.data,'ChannelGroupsIDs')));
    
end
guidata(hObject,handles);

end


end



%% AUXILIARY FUNCTIONS
function val=marker2value(marker,StringList)
%Simply computes in which position of the string list is
%the marker
nStrings=length(StringList);
val=1;
for ii=1:nStrings
    if strcmp(marker,StringList{ii})
       val=ii;
       break
    end
end

end